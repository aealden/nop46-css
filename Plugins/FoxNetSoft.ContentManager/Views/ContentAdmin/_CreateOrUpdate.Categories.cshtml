@model FoxNetSoft.Plugin.Misc.ContentManager.Models.Admin.ContentRecordModel
@using FoxNetSoft.Plugin.Misc.ContentManager.Models.Admin
@using Microsoft.AspNetCore.Routing
    <div class="cards-group">
        @if (Model.Id > 0)
        {
            if (Model.NumberOfAvailableCategories > 0)
            {
                <div class="card card-default">
                    <div class="card-body">
                        @T("Admin.FoxNetSoft.Plugin.Misc.ContentManager.Categories.Hint")
                        @await Html.PartialAsync("Table", new DataTablesModel
                   {
                       Name = "categories-grid",
                       UrlRead = new DataUrl("CategoryList", "ContentAdmin", new RouteValueDictionary { [nameof(Model.ContentRecordSearchModel.ContentId)] = Model.ContentRecordSearchModel.ContentId }),
                       UrlDelete = new DataUrl("CategoryDelete", "ContentAdmin", null),
                       UrlUpdate = new DataUrl("CategoryUpdate", "ContentAdmin", null),
                       Length = Model.ContentRecordSearchModel.PageSize,
                       LengthMenu = Model.ContentRecordSearchModel.AvailablePageSizes,
                       ColumnCollection = new List<ColumnProperty>
        {
            new ColumnProperty(nameof(ContentCategoryModel.Published))
            {
                               Title = T("Admin.Catalog.Categories.Fields.Published").Text,
                               Width = "70",
                               ClassName = NopColumnClassDefaults.CenterAll,
                               Render = new RenderBoolean()
                               },
                               new ColumnProperty(nameof(ContentCategoryModel.Category))
                               {
                               Title = T("Admin.Catalog.Categories.Fields.Name").Text
                               },
                                new ColumnProperty(nameof(ContentCategoryModel.ForSubCategory))
                                {
                                    Title = T("Admin.FoxNetSoft.Plugin.Misc.ContentManager.ForSubCategory").Text,
                                    Width = "70",
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Render = new RenderBoolean(),
                                    Editable = true,
                                    EditType = EditType.Checkbox
                                },
                               new ColumnProperty(nameof(ContentCategoryModel.CategoryId))
                               {
                               Title = T("Admin.Common.View").Text,
                               Width = "150",
                               ClassName = NopColumnClassDefaults.Button,
                               Render = new RenderButtonView(new DataUrl("~/Admin/Category/Edit/", nameof(ContentCategoryModel.CategoryId)))
                               },
                                new ColumnProperty(nameof(ContentCategoryModel.Id))
                                {
                                    Title = T("Admin.Common.Edit").Text,
                                    Width = "100",
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Render = new RenderButtonsInlineEdit()
                                },
                               new ColumnProperty(nameof(ContentCategoryModel.Id))
                               {
                               Title = T("Admin.Common.Delete").Text,
                               Width = "100",
                               Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                               ClassName = NopColumnClassDefaults.Button
                               }
                               }
                   })
                    </div>
                </div>
                <div class="card card-default no-margin">
                    <div class="card-header">
                        @T("Admin.Common.AddNewRecord")
                    </div>
                    <div class="card-body">
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="@Model.AddContentCategory.CategoryId" />
                            </div>
                            <div class="col-md-9">
                                <nop-select asp-for="@Model.AddContentCategory.CategoryId" asp-items="@Model.AvailableCategories" />
                                <span asp-validation-for="@Model.AddContentCategory.CategoryId"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="AddContentCategory.ForSubCategory" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="AddContentCategory.ForSubCategory" />
                                <span asp-validation-for="AddContentCategory.ForSubCategory"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-9 col-md-offset-3">
                                <button type="button" id="addContentCategory" class="btn btn-primary">@T("Admin.Common.AddNewRecord")</button>
                            </div>
                        </div>
                    </div>
                    <script>
                    $(document).ready(function () {
                        $('#addContentCategory').click(function () {
                            $('#addContentCategory').attr('disabled', true);
                            var postData = {
                                CategoryId: $("#@Html.IdFor(model => model.AddContentCategory.CategoryId)").val(),
                                ForSubCategory: $("#@Html.IdFor(model => model.AddContentCategory.ForSubCategory)").val(),
                                ContentId: @Model.Id
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@Html.Raw(Url.Action("CategoryInsert", "ContentAdmin"))",
                                data: postData,
                                success: function (data, textStatus, jqXHR) {
                                    if (data.Result) {
                                        //reload grid
                                        updateTable('#categories-grid');
                                    } else {
                                        //display errors if returned
                                        display_nop_error(data);
                                    }
                                },
                                complete: function (jqXHR, textStatus) {
                                    $('#addContentCategory').attr('disabled', false);
                                }
                            });
                        });
                    });
                    </script>
                </div>
            }
            else
            {
                <div class="card card-default">
                    <div class="card-body">
                        @T("Admin.FoxNetSoft.Plugin.Misc.ContentManager.Categories.NoCategoriesAvailable")
                    </div>
                </div>
            }
        }
        else
        {
            <div class="card card-default">
                <div class="card-body">
                    @T("Admin.FoxNetSoft.Plugin.Misc.ContentManager.Categories.SaveBeforeEdit")
                </div>
            </div>

        }
    </div>
