@model FoxNetSoft.Plugin.Misc.ContentManager.Models.Admin.ContentRecordModel
@using FoxNetSoft.Plugin.Misc.ContentManager.Models.Admin
@using Microsoft.AspNetCore.Routing

<div class="cards-group">
    @if (Model.Id > 0)
    {
        <div class="card card-default">
            <div class="card-body">
                @T("Admin.FoxNetSoft.Plugin.Misc.ContentManager.Products.Hint")

                <div class="card-body">
                    @await Html.PartialAsync("Table", new DataTablesModel
                           {
                               Name = "products-grid",
                               UrlRead = new DataUrl("ProductList", "ContentAdmin", new RouteValueDictionary { [nameof(Model.ContentRecordSearchModel.ContentId)] = Model.ContentRecordSearchModel.ContentId }),
                               UrlDelete = new DataUrl("ProductDelete", "ContentAdmin", null),
                               Length = Model.ContentRecordSearchModel.PageSize,
                               LengthMenu = Model.ContentRecordSearchModel.AvailablePageSizes,
                               ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(ContentProductModel.Published))
                            {
                                Title = T("Admin.Catalog.Products.Fields.Published").Text,
                                Width = "70",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(ContentProductModel.ProductName))
                            {
                                Title = T("Admin.Catalog.Products.Fields.Name").Text
                            },
                            new ColumnProperty(nameof(ContentProductModel.ProductId))
                            {
                                Title = T("Admin.Common.View").Text,
                                Width = "150",
                                ClassName = NopColumnClassDefaults.Button,
                                Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/", nameof(ContentProductModel.ProductId)))
                            },
                            new ColumnProperty(nameof(ContentProductModel.Id))
                            {
                                Title = T("Admin.Common.Delete").Text,
                                Width = "100",
                                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                                ClassName = NopColumnClassDefaults.Button
                            }
                        }
                           })
                </div>

            </div>
                <div class="card-footer">
                    <button type="submit" id="btnAddNewProduct"
                            onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "ContentAdmin" , new {contentId=Model.Id, btnId="btnRefreshProducts" , formId="contentblock-form" }))', 800, 800, true); return false;"
                            class="btn btn-primary">
                        @T("Admin.Catalog.Categories.Products.AddNew")
                    </button>
                    <input type="submit" id="btnRefreshProducts" style="display: none" />
                    <script>
                        $(document).ready(function () {
                            $('#btnRefreshProducts').click(function () {
                                updateTable('#products-grid');

                                //return false to don't reload a page
                                return false;
                            });
                        });
                    </script>
                </div>
            </div>
                    }
                    else
                    {
                        <div class="card card-default">
                            <div class="card-body">
                                @T("Admin.FoxNetSoft.Plugin.Misc.ContentManager.Products.SaveBeforeEdit")
                            </div>
                        </div>
                    }
</div>
